1，当父子组件传值发生改变时触发的函数
	ngOnChanges(){

	}
2，初始化指令时触发的函数：
	ngOnInit(){
	
	}
3,视图加载完成之后触发：
	ngAfterViewInit(){
		
	}
4，销毁之后,卸载时触发：
	ngOnDestroy(){
	
	}
	
5,请求数据，数据交互：
	GET请求：
		app.modules.ts中引入：
			import {HttpClientModule} from '@angular/common/http'
		声明：imports:[
				HttpClientModule
			]
		使用：在用到的文件中引入
			import {HttpClient} from '@angular/common/http'
			
			声明：constructor(public http:HttpClient){}
			
			调用：this.http.get(api).subscribe((res:any)=>{
						console.log(res)
				  })
	POST请求：
		app.modules.ts中引入：
			import {HttpClientModule} from '@angular/common/http'
		声明：imports:[
				HttpClientModule
			]
		使用：在用到的文件中引入
			import {HttpClient，HttpHeaders} from '@angular/common/http'
			
			声明：constructor(public http:HttpClient){}
			
			调用：
				const httpOptions={headers:new HttpHeaders({'Content-Type':'application/json'})}    //固定格式
				this.http.post(api,{data},httpOptions).subscribe((res:any)=>{
						console.log(res)
				  })
				  
	JSONP请求：
		
		app.modules.ts中引入：
			import {HttpClientModule,HttpClientJsonpModule} from '@angular/common/http'
		声明：imports:[
				HttpClientModule,
				HttpClientJsonpModule
			]
		使用：在用到的文件中引入
			import {HttpClient，HttpHeaders} from '@angular/common/http'
			
			声明：constructor(public http:HttpClient){}
			
			调用：
				this.http.jsonp(api,'calback').subscribe((res:any)=>{
						console.log(res)
				  })				  

6,使用第三方axios或取：
	ag server新建一个服务的文件，封装方法全局调用：
	
	1，安装 install
	2,引入在新建的服务页面：import axios from 'axios'
	3,使用：
		return new Promise((resolve,reject)->{
			axios.get(api).then(function(res){
				console.log(res);
				resolve(res);
				})
		})

7,路由访问：
	1，安装路由，安装项目时直接安装  
		ng new '项目名' --routing
	2，在app-routing.modules中引入文件路径，设置路由
		默认跳转路由：{path:'**',redirectTo:'index'}
	3，使用
		<a routerLink="/index" >首&nbsp;&nbsp;&nbsp;页</a>
		<a [routerLink]="['/info']">简&nbsp;&nbsp;&nbsp;介</a>

8，路由访问传值：
	1，路由传参跳转：
		<a [routerLink]="['/info']" [queryParams]="{id:1 (要传递的参数)}">简&nbsp;&nbsp;&nbsp;介</a>
	2，页面接收：
		引入先：
			import {ActivatedRoute} from '@angular/router'
		声明：
			constructor(public route:ActivatedRoute){}
		接收打印：
			this.route.queryParams.subscribe((data)=>{
				console.log(data)
			})	  

				  
9,JS跳转：
	1，引入：
		import {Router} from '@angular/router'
	2,声明：	
		constructor(public route:Router){}
	3，使用：
		this.route.navigate(['/路由页面'],'参数')
		this.route.navigate(['/info'],{
			queryParams:{
				id:123
			}
		});
						  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
					