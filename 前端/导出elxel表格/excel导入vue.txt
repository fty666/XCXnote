1,安装install 
 npm install file-saver xlsx -S
 npm install script-loader -D

<template>
    <div>
//上传excel文档
        <el-upload
                :show-file-list="false"
                action=""
                :on-change="handleChange"
                accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel"
                :auto-upload="false">
            <el-button size="small" type="primary">点击上传</el-button>
            <div slot="tip">只 能 上 传 xlsx / xls 文 件</div>
        </el-upload>
//把excel显示到表格
        <el-table
                :data="tableData"
                style="width: 100%">
            <div v-for ="(item,key,index) in tableData[0]" :key="index">
                <el-table-column
                        :prop="key"
                        :label="key"
                       >
                </el-table-column>
            </div>

        </el-table>
    </div>
</template>


  <script>
export default {
  name: "index",
  data(){
    return {
      limitUpload:1,
      tableData:[]
    }
  },
  methods:{

    handleChange(file, fileList){
      this.importfxx(file.raw)
    },

    importfxx(obj) {
      let _this = this;
      let inputDOM = this.$refs.inputer;
      // 通过DOM取文件数据
      this.file = event.currentTarget.files[0];
      var rABS = false; //是否将文件读取为二进制字符串
      var f = this.file;
      var reader = new FileReader();
      FileReader.prototype.readAsBinaryString = function(f) {
        var binary = "";
        var rABS = false; //是否将文件读取为二进制字符串
        var pt = this;
        var wb; //读取完成的数据
        var outdata;
        var reader = new FileReader();
        reader.onload = function(e) {
          var bytes = new Uint8Array(reader.result);
          var length = bytes.byteLength;
          for(var i = 0; i < length; i++) {
            binary += String.fromCharCode(bytes[i]);
          }
          var XLSX = require('xlsx');
          if(rABS) {
            wb = XLSX.read(btoa(fixdata(binary)), { //手动转化
              type: 'base64'
            });
          } else {
            wb = XLSX.read(binary, {
              type: 'binary'
            });
          }
          outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);//outdata就是你想要的东西
          this.da = [...outdata]
          console.log(outdata)
          let arr = []
          _this.tableData = outdata
          this.da.map(v => {
            let obj = {}
            obj.id = v.id
            obj.status = v.status
            arr.push(obj)
          })
          let para = {
            withList: arr
          }
          _this.$message({
            message: '请耐心等待导入成功',
            type: 'success'
          });
        }
        reader.readAsArrayBuffer(f);
      }

      if(rABS) {
        reader.readAsArrayBuffer(f);
      } else {
        reader.readAsBinaryString(f);
      }
    }
  }
}
</script>