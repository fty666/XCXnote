一，父向子传值和传递方法
	1， 传递值：
			//Fdata为父组件上data里的值，Zdata为子组件要接收的值的命名
			//close为子组件中调用父组件的方法名，MsgShowClose为父组件中自己的方法名
		父组件传值：
			<user-msg :Zdata="Fdata"></user-msg>
		子组件使用：
		    data() {
				return {
					data: this.Zdata    /*可以直接将传过来的值进行赋值*/
				}
			},
			//传过来的如果是对象，则定义type类型
			props: {
				Zdata: {
					type: Object,
					default:'默认值'
				}
			},
			props: ['Zdata'],
	2，传递方法
			@close为子组件调用的方法名
			MsgShowClose 为父组件的方法名
			父组件规定方法：
				<user-msg  @close="MsgShowClose"></user-msg>
			子组件调用：
			child(){
				this.$emit('close',{参数})
			}
				
二，子向父传值和传递方法：
	1，传值
		//子组件：需要一个事件触发
		//fatherFun为子组件向父传递的方法名，通过方法名绑定传值
		//shijian是父组件的方法获取子组件传递的值
		子组件规定传值：	
			<button @click='Fun()'></button>
			fun(){
				this.$emit('fatherFun',this.data)
			}
		父组件使用：
			<child v-on:fatherFun='shijian'></child>
			shijian(data){
				console.log(data);
				data为子组件传来的数据
			}
	2，方法
		//ref相当于一个占位符，里面的取名为引用子组件的方法名
		子组件中定义好的方法：
			child(){
				console.log('要传递的方法');
			}
		父组件中直接使用：
			<orderList ref='fun'></orderList>
			father(){
				this.$refs.fun.child()
			}